#include<stdio.h>
#include<stdlib.h>
#define MAX 100
char infix[MAX];
char postfix[MAX];
char stack[MAX];
int top=-1;
void push(void);
char pop(void);
int precedence(char);
void print(void);
int IS emepty(void);
void infixTopostfix(void);
int main();
{
    printf("Enter a infix expression:");
    gets(infix);
    infixTopostfix();
    printf();
}
void push(char x)
{
    if(top==MAX-1)
    {
        printf("Stack is Full");
        exit(1);
    }
    top++;
    stack[top]=x;
}
char pop()
{
    char c;
    if(top==-1)
    {
        printf("Stack is Full");
        exit(1);
    }
    c=stack[top];
    top--;
    return 0;
}
int precedence(char x)
{
    if(x=='+' || x=='-')
    return 1;
    else if(x== '*' || x=='/')
    return 2;
    else if(x== '^')
    return 3;
    else
    return 0;
}
void print()
{
    int i;
    for(i=0;postfix[i]!='/0';i++)
    printf("%c",postfix[i]);
    return ;
}
int IS empty()
{
    if(top==-1)
    return 1;
    else
    return 0;
}
